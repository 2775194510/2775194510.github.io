export const data = JSON.parse("{\"key\":\"v-80dcb558\",\"path\":\"/blogs/%E9%9D%A2%E8%AF%95/Java%E5%9F%BA%E7%A1%80%E4%B8%8A.html\",\"title\":\"Java基础上\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"Java基础上\",\"date\":\"2023-6-12\",\"sidebar\":\"auto\",\"keys\":[\"c5abde72f7faa2110550fc5a776622a2\"],\"categories\":[\"面经\"],\"tags\":[\"面经\"]},\"headers\":[{\"level\":2,\"title\":\"1：Java概述\",\"slug\":\"_1-java概述\",\"link\":\"#_1-java概述\",\"children\":[{\"level\":3,\"title\":\"1-1：Java语言有哪些特点？\",\"slug\":\"_1-1-java语言有哪些特点\",\"link\":\"#_1-1-java语言有哪些特点\",\"children\":[]},{\"level\":3,\"title\":\"1-2：Java和C++有什么关系，它们有什么区别？\",\"slug\":\"_1-2-java和c-有什么关系-它们有什么区别\",\"link\":\"#_1-2-java和c-有什么关系-它们有什么区别\",\"children\":[]},{\"level\":3,\"title\":\"1-3：JVM、JRE和JDK的关系是什么？\",\"slug\":\"_1-3-jvm、jre和jdk的关系是什么\",\"link\":\"#_1-3-jvm、jre和jdk的关系是什么\",\"children\":[]},{\"level\":3,\"title\":\"1-4：什么是字节码?\",\"slug\":\"_1-4-什么是字节码\",\"link\":\"#_1-4-什么是字节码\",\"children\":[]},{\"level\":3,\"title\":\"1-5：采用字节码的好处是什么?\",\"slug\":\"_1-5-采用字节码的好处是什么\",\"link\":\"#_1-5-采用字节码的好处是什么\",\"children\":[]},{\"level\":3,\"title\":\"1-6：Oracle JDK 和 OpenJDK 的区别是什么？\",\"slug\":\"_1-6-oracle-jdk-和-openjdk-的区别是什么\",\"link\":\"#_1-6-oracle-jdk-和-openjdk-的区别是什么\",\"children\":[]}]},{\"level\":2,\"title\":\"2：基础语法\",\"slug\":\"_2-基础语法\",\"link\":\"#_2-基础语法\",\"children\":[{\"level\":3,\"title\":\"2-1：Java有哪些数据类型？\",\"slug\":\"_2-1-java有哪些数据类型\",\"link\":\"#_2-1-java有哪些数据类型\",\"children\":[]},{\"level\":3,\"title\":\"2-2：switch 是否能作用在 byte 上，是否能作用在 long 上，是否能作用在 String 上？\",\"slug\":\"_2-2-switch-是否能作用在-byte-上-是否能作用在-long-上-是否能作用在-string-上\",\"link\":\"#_2-2-switch-是否能作用在-byte-上-是否能作用在-long-上-是否能作用在-string-上\",\"children\":[]},{\"level\":3,\"title\":\"2-3：访问修饰符public、private、protected、以及不写（默认）时的区别？\",\"slug\":\"_2-3-访问修饰符public、private、protected、以及不写-默认-时的区别\",\"link\":\"#_2-3-访问修饰符public、private、protected、以及不写-默认-时的区别\",\"children\":[]},{\"level\":3,\"title\":\"2-4：break ,continue ,return 的区别及作用？\",\"slug\":\"_2-4-break-continue-return-的区别及作用\",\"link\":\"#_2-4-break-continue-return-的区别及作用\",\"children\":[]}]},{\"level\":2,\"title\":\"3：关键字\",\"slug\":\"_3-关键字\",\"link\":\"#_3-关键字\",\"children\":[{\"level\":3,\"title\":\"3-1：final、finally、finalize的区别？\",\"slug\":\"_3-1-final、finally、finalize的区别\",\"link\":\"#_3-1-final、finally、finalize的区别\",\"children\":[]},{\"level\":3,\"title\":\"3-2：为什么要用static关键字？\",\"slug\":\"_3-2-为什么要用static关键字\",\"link\":\"#_3-2-为什么要用static关键字\",\"children\":[]},{\"level\":3,\"title\":\"3-3：”static”关键字是什么意思？Java中是否可以覆盖(override)一个private或者是static的方法？\",\"slug\":\"_3-3-static-关键字是什么意思-java中是否可以覆盖-override-一个private或者是static的方法\",\"link\":\"#_3-3-static-关键字是什么意思-java中是否可以覆盖-override-一个private或者是static的方法\",\"children\":[]},{\"level\":3,\"title\":\"3-4：是否可以在static环境中访问非static变量？\",\"slug\":\"_3-4-是否可以在static环境中访问非static变量\",\"link\":\"#_3-4-是否可以在static环境中访问非static变量\",\"children\":[]},{\"level\":3,\"title\":\"3-5：static静态方法能不能引用非静态资源？\",\"slug\":\"_3-5-static静态方法能不能引用非静态资源\",\"link\":\"#_3-5-static静态方法能不能引用非静态资源\",\"children\":[]},{\"level\":3,\"title\":\"3-6：static静态方法里面能不能引用静态资源？\",\"slug\":\"_3-6-static静态方法里面能不能引用静态资源\",\"link\":\"#_3-6-static静态方法里面能不能引用静态资源\",\"children\":[]},{\"level\":3,\"title\":\"3-7：非静态方法里面能不能引用静态资源？\",\"slug\":\"_3-7-非静态方法里面能不能引用静态资源\",\"link\":\"#_3-7-非静态方法里面能不能引用静态资源\",\"children\":[]},{\"level\":3,\"title\":\"3-8：java静态变量、代码块、和静态方法的执行顺序是什么？\",\"slug\":\"_3-8-java静态变量、代码块、和静态方法的执行顺序是什么\",\"link\":\"#_3-8-java静态变量、代码块、和静态方法的执行顺序是什么\",\"children\":[]}]},{\"level\":2,\"title\":\"4：面向对象\",\"slug\":\"_4-面向对象\",\"link\":\"#_4-面向对象\",\"children\":[{\"level\":3,\"title\":\"4-1：面向对象和面向过程的区别？\",\"slug\":\"_4-1-面向对象和面向过程的区别\",\"link\":\"#_4-1-面向对象和面向过程的区别\",\"children\":[]},{\"level\":3,\"title\":\"4-2：讲讲面向对象三大特性\",\"slug\":\"_4-2-讲讲面向对象三大特性\",\"link\":\"#_4-2-讲讲面向对象三大特性\",\"children\":[]},{\"level\":3,\"title\":\"4-3：Java语言是如何实现多态的？\",\"slug\":\"_4-3-java语言是如何实现多态的\",\"link\":\"#_4-3-java语言是如何实现多态的\",\"children\":[]},{\"level\":3,\"title\":\"4-4：重载（Overload）和重写（Override）的区别是什么？\",\"slug\":\"_4-4-重载-overload-和重写-override-的区别是什么\",\"link\":\"#_4-4-重载-overload-和重写-override-的区别是什么\",\"children\":[]},{\"level\":3,\"title\":\"4-5：重载的方法能否根据返回值类型进行区分？\",\"slug\":\"_4-5-重载的方法能否根据返回值类型进行区分\",\"link\":\"#_4-5-重载的方法能否根据返回值类型进行区分\",\"children\":[]},{\"level\":3,\"title\":\"4-6：构造器（constructor）是否可被重写（override）？\",\"slug\":\"_4-6-构造器-constructor-是否可被重写-override\",\"link\":\"#_4-6-构造器-constructor-是否可被重写-override\",\"children\":[]},{\"level\":3,\"title\":\"4-7：抽象类和接口的区别是什么？\",\"slug\":\"_4-7-抽象类和接口的区别是什么\",\"link\":\"#_4-7-抽象类和接口的区别是什么\",\"children\":[]},{\"level\":3,\"title\":\"4-8：抽象类能使用 final 修饰吗？\",\"slug\":\"_4-8-抽象类能使用-final-修饰吗\",\"link\":\"#_4-8-抽象类能使用-final-修饰吗\",\"children\":[]},{\"level\":3,\"title\":\"4-9：java 创建对象有哪几种方式？\",\"slug\":\"_4-9-java-创建对象有哪几种方式\",\"link\":\"#_4-9-java-创建对象有哪几种方式\",\"children\":[]},{\"level\":3,\"title\":\"4-10：什么是不可变对象?好处是什么?\",\"slug\":\"_4-10-什么是不可变对象-好处是什么\",\"link\":\"#_4-10-什么是不可变对象-好处是什么\",\"children\":[]},{\"level\":3,\"title\":\"4-11：能否创建一个包含可变对象的不可变对象?\",\"slug\":\"_4-11-能否创建一个包含可变对象的不可变对象\",\"link\":\"#_4-11-能否创建一个包含可变对象的不可变对象\",\"children\":[]},{\"level\":3,\"title\":\"4-12：值传递和引用传递的区别的什么？为什么说Java中只有值传递？\",\"slug\":\"_4-12-值传递和引用传递的区别的什么-为什么说java中只有值传递\",\"link\":\"#_4-12-值传递和引用传递的区别的什么-为什么说java中只有值传递\",\"children\":[]}]},{\"level\":2,\"title\":\"5：对象相等判断\",\"slug\":\"_5-对象相等判断\",\"link\":\"#_5-对象相等判断\",\"children\":[{\"level\":3,\"title\":\"5-1：== 和 equals 区别是什么？\",\"slug\":\"_5-1-和-equals-区别是什么\",\"link\":\"#_5-1-和-equals-区别是什么\",\"children\":[]},{\"level\":3,\"title\":\"5-2：介绍下hashCode()？\",\"slug\":\"_5-2-介绍下hashcode\",\"link\":\"#_5-2-介绍下hashcode\",\"children\":[]},{\"level\":3,\"title\":\"5-3：为什么要有 hashCode?\",\"slug\":\"_5-3-为什么要有-hashcode\",\"link\":\"#_5-3-为什么要有-hashcode\",\"children\":[]},{\"level\":3,\"title\":\"5-4：hashCode(),equals()两种方法是什么关系?\",\"slug\":\"_5-4-hashcode-equals-两种方法是什么关系\",\"link\":\"#_5-4-hashcode-equals-两种方法是什么关系\",\"children\":[]},{\"level\":3,\"title\":\"5-5：为什么重写 equals 方法必须重写 hashcode 方法 ﻿？\",\"slug\":\"_5-5-为什么重写-equals-方法必须重写-hashcode-方法\",\"link\":\"#_5-5-为什么重写-equals-方法必须重写-hashcode-方法\",\"children\":[]},{\"level\":3,\"title\":\"5-5：String,StringBuffer, StringBuilder 的区别是什么？\",\"slug\":\"_5-5-string-stringbuffer-stringbuilder-的区别是什么\",\"link\":\"#_5-5-string-stringbuffer-stringbuilder-的区别是什么\",\"children\":[]},{\"level\":3,\"title\":\"5-6：String为什么要设计成不可变的？\",\"slug\":\"_5-6-string为什么要设计成不可变的\",\"link\":\"#_5-6-string为什么要设计成不可变的\",\"children\":[]}]},{\"level\":2,\"title\":\"6：参考\",\"slug\":\"_6-参考\",\"link\":\"#_6-参考\",\"children\":[]}]}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
