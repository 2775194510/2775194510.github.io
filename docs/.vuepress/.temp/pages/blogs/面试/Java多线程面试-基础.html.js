export const data = JSON.parse("{\"key\":\"v-4f17441c\",\"path\":\"/blogs/%E9%9D%A2%E8%AF%95/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%9D%A2%E8%AF%95-%E5%9F%BA%E7%A1%80.html\",\"title\":\"Java多线程面试-基础\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"Java多线程面试-基础\",\"date\":\"2023-6-12\",\"sidebar\":\"auto\",\"keys\":[\"c5abde72f7faa2110550fc5a776622a2\"],\"categories\":[\"面经\"],\"tags\":[\"面经\"]},\"headers\":[{\"level\":2,\"title\":\"1. 线程和进程有什么区别？\",\"slug\":\"_1-线程和进程有什么区别\",\"link\":\"#_1-线程和进程有什么区别\",\"children\":[]},{\"level\":2,\"title\":\"2. 创建线程的三种方式的对比？\",\"slug\":\"_2-创建线程的三种方式的对比\",\"link\":\"#_2-创建线程的三种方式的对比\",\"children\":[]},{\"level\":2,\"title\":\"3. 为什么要使用多线程呢?\",\"slug\":\"_3-为什么要使用多线程呢\",\"link\":\"#_3-为什么要使用多线程呢\",\"children\":[]},{\"level\":2,\"title\":\"4. 线程的状态流转\",\"slug\":\"_4-线程的状态流转\",\"link\":\"#_4-线程的状态流转\",\"children\":[]},{\"level\":2,\"title\":\"5. 什么是线程死锁?如何避免死锁?\",\"slug\":\"_5-什么是线程死锁-如何避免死锁\",\"link\":\"#_5-什么是线程死锁-如何避免死锁\",\"children\":[{\"level\":3,\"title\":\"死锁\",\"slug\":\"死锁\",\"link\":\"#死锁\",\"children\":[]},{\"level\":3,\"title\":\"死锁必须具备以下四个条件：\",\"slug\":\"死锁必须具备以下四个条件\",\"link\":\"#死锁必须具备以下四个条件\",\"children\":[]},{\"level\":3,\"title\":\"如何避免线程死锁?\",\"slug\":\"如何避免线程死锁\",\"link\":\"#如何避免线程死锁\",\"children\":[]}]},{\"level\":2,\"title\":\"6. 常见的对比\",\"slug\":\"_6-常见的对比\",\"link\":\"#_6-常见的对比\",\"children\":[{\"level\":3,\"title\":\"Runnable vs Callable\",\"slug\":\"runnable-vs-callable\",\"link\":\"#runnable-vs-callable\",\"children\":[]},{\"level\":3,\"title\":\"execute() vs submit()\",\"slug\":\"execute-vs-submit\",\"link\":\"#execute-vs-submit\",\"children\":[]},{\"level\":3,\"title\":\"shutdown()VSshutdownNow()\",\"slug\":\"shutdown-vsshutdownnow\",\"link\":\"#shutdown-vsshutdownnow\",\"children\":[]},{\"level\":3,\"title\":\"isTerminated() VS isShutdown()\",\"slug\":\"isterminated-vs-isshutdown\",\"link\":\"#isterminated-vs-isshutdown\",\"children\":[]}]},{\"level\":2,\"title\":\"7. sleep() 方法和 wait() 方法区别和共同点?\",\"slug\":\"_7-sleep-方法和-wait-方法区别和共同点\",\"link\":\"#_7-sleep-方法和-wait-方法区别和共同点\",\"children\":[{\"level\":3,\"title\":\"区别\",\"slug\":\"区别\",\"link\":\"#区别\",\"children\":[]},{\"level\":3,\"title\":\"相同\",\"slug\":\"相同\",\"link\":\"#相同\",\"children\":[]}]},{\"level\":2,\"title\":\"8.为什么我们调用 start() 方法时会执行 run() 方法，为什么我们不能直接调用 run() 方法\",\"slug\":\"_8-为什么我们调用-start-方法时会执行-run-方法-为什么我们不能直接调用-run-方法\",\"link\":\"#_8-为什么我们调用-start-方法时会执行-run-方法-为什么我们不能直接调用-run-方法\",\"children\":[]},{\"level\":2,\"title\":\"9.ThreadLocal是什么？有什么用？\",\"slug\":\"_9-threadlocal是什么-有什么用\",\"link\":\"#_9-threadlocal是什么-有什么用\",\"children\":[]},{\"level\":2,\"title\":\"10. Thread类中的yield方法有什么作用？\",\"slug\":\"_10-thread类中的yield方法有什么作用\",\"link\":\"#_10-thread类中的yield方法有什么作用\",\"children\":[]},{\"level\":2,\"title\":\"11. Java中的fork join框架是什么？\",\"slug\":\"_11-java中的fork-join框架是什么\",\"link\":\"#_11-java中的fork-join框架是什么\",\"children\":[]},{\"level\":2,\"title\":\"12. synchronized和ReentrantLock 的区别\",\"slug\":\"_12-synchronized和reentrantlock-的区别\",\"link\":\"#_12-synchronized和reentrantlock-的区别\",\"children\":[]},{\"level\":2,\"title\":\"13. 谈谈volatile的使用及其原理\",\"slug\":\"_13-谈谈volatile的使用及其原理\",\"link\":\"#_13-谈谈volatile的使用及其原理\",\"children\":[]},{\"level\":2,\"title\":\"14. synchronized 关键字和 volatile 关键字的区别\",\"slug\":\"_14-synchronized-关键字和-volatile-关键字的区别\",\"link\":\"#_14-synchronized-关键字和-volatile-关键字的区别\",\"children\":[]}]}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
