(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{1093:function(t,_,v){t.exports=v.p+"assets/img/image.5c72593d.png"},1094:function(t,_,v){t.exports=v.p+"assets/img/image1.03455115.png"},1095:function(t,_,v){t.exports=v.p+"assets/img/image2.1f900e1d.png"},1096:function(t,_,v){t.exports=v.p+"assets/img/image3.affe21d1.png"},1097:function(t,_,v){t.exports=v.p+"assets/img/image4.0e1e9f32.png"},1098:function(t,_,v){t.exports=v.p+"assets/img/image5.2dff2600.png"},1504:function(t,_,v){"use strict";v.r(_);var e=v(1),a=Object(e.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"_1-flink是什么"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-flink是什么"}},[t._v("#")]),t._v(" 1：Flink是什么")]),t._v(" "),_("h3",{attrs:{id:"_1-概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念"}},[t._v("#")]),t._v(" 1）概念")]),t._v(" "),_("p",[t._v("Flink的 "),_("a",{attrs:{href:"https://flink.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网主页地址"),_("OutboundLink")],1)]),t._v(" "),_("p",[t._v("Flimk核心目标，是“ "),_("strong",[_("code",[t._v("数据流上的有状态计算")])]),t._v(" ”( Stateful Computations over Data Streams )")]),t._v(" "),_("p",[t._v("具体说明: "),_("code",[t._v("Apache Flink")]),t._v(" 是一个框架和分布式处理引擎，用于对 "),_("code",[t._v("无界")]),t._v(" 和 "),_("code",[t._v("有界")]),t._v(" 数据流进行有\n状态计算。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(1093),alt:"Alt text"}})]),t._v(" "),_("hr"),t._v(" "),_("h3",{attrs:{id:"_2-有界无界流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-有界无界流"}},[t._v("#")]),t._v(" 2）有界无界流")]),t._v(" "),_("blockquote",[_("p",[_("strong",[t._v("无界流")]),t._v(" 和 "),_("strong",[t._v("有界流")])])]),t._v(" "),_("ul",[_("li",[_("code",[t._v("无界数据流")]),t._v(" "),_("ul",[_("li",[t._v("有定义流的开始，但没有定义流的结束;")]),t._v(" "),_("li",[t._v("它们会无休止的产生数据;")]),t._v(" "),_("li",[t._v("无界流的数据必须持续处理，即数据被摄取后需要立刻处理。")]),t._v(" "),_("li",[t._v("我们不能等到所有数据都到达再处理，因为输入是无限的。")])])]),t._v(" "),_("li",[_("code",[t._v("有界数据流")]),t._v(" "),_("ul",[_("li",[t._v("有定义流的开始，也有定义流的结束")]),t._v(" "),_("li",[t._v("有界流可以在摄取所有数据后再进行计算")]),t._v(" "),_("li",[t._v("有界流所有数据可以被排序，所以并不需要有序摄取")]),t._v(" "),_("li",[t._v("有界流处理通常被称为批处理")])])])]),t._v(" "),_("h3",{attrs:{id:"_3-有状态流处理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-有状态流处理"}},[t._v("#")]),t._v(" 3）有状态流处理")]),t._v(" "),_("p",[t._v("把流处理需要的 "),_("em",[_("strong",[_("code",[t._v("额外数据保存成一个“状态”")])])]),t._v(" ，然后针对这条数据进行处理，"),_("em",[_("strong",[t._v("并且更新状态")])]),t._v("。这就是所谓的 "),_("em",[_("strong",[_("code",[t._v("“有状态的流处理”")])])])]),t._v(" "),_("p",[_("img",{attrs:{src:v(1094),alt:"Alt text"}})]),t._v(" "),_("ul",[_("li",[t._v("状态在 "),_("code",[t._v("内存")]),t._v(" 中:\n"),_("ul",[_("li",[t._v("优点，速度快")]),t._v(" "),_("li",[t._v("缺点，可靠性差")])])]),t._v(" "),_("li",[t._v("状态在 "),_("code",[t._v("分布式系统")]),t._v(" 中\n"),_("ul",[_("li",[t._v("优点，可靠性高")]),t._v(" "),_("li",[t._v("缺点，速度慢")])])])]),t._v(" "),_("h2",{attrs:{id:"_2-flink特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-flink特点"}},[t._v("#")]),t._v(" 2：Flink特点")]),t._v(" "),_("p",[t._v("我们处理数据的目标是: "),_("span",{staticStyle:{color:"red"}},[t._v("低延迟、高吞吐、结果的准确性和良好的容错性")])]),t._v(" "),_("blockquote",[_("p",[t._v("Flink主要特点如下:")])]),t._v(" "),_("ul",[_("li",[_("code",[t._v("高吞吐和低延迟")]),t._v("。每秒处理数百万个事件，毫秒级延迟。")]),t._v(" "),_("li",[_("code",[t._v("结果的准确性")]),t._v("。Flink提供了 "),_("code",[t._v("事件时间 (event-time)")]),t._v(" 和 "),_("code",[t._v("处理时间 (processing-time)")]),t._v(" 语义。对于乱序事件流，事件时间语义仍然能提供一致且准确的结果。")]),t._v(" "),_("li",[_("code",[t._v("精确一次")]),t._v(" (exactly-once)的状态一致性保证")]),t._v(" "),_("li",[_("code",[t._v("可以连接到最常用的外部系统")]),t._v("，如 "),_("code",[t._v("Kaka")]),t._v("、"),_("code",[t._v("Hve")]),t._v("、"),_("code",[t._v("JDBC")]),t._v("、"),_("code",[t._v("HDES")]),t._v("、"),_("code",[t._v("Reds")]),t._v(" 等。")]),t._v(" "),_("li",[_("code",[t._v("高可用")]),t._v("。本身高可用的设置，加上与 "),_("code",[t._v("K8s")]),t._v("，"),_("code",[t._v("YARN")]),t._v(" 和 "),_("code",[t._v("Mesos")]),t._v(" 的紧密集成，再加上从故障中快速恢复和动态扩展任务的能力，Flink能做到以极少的停机时间7X24全天候运行")])]),t._v(" "),_("h2",{attrs:{id:"_3-flink-vs-sparkstreaming"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-flink-vs-sparkstreaming"}},[t._v("#")]),t._v(" 3：Flink vs SparkStreaming")]),t._v(" "),_("p",[_("img",{attrs:{src:v(1095),alt:"Alt text"}}),t._v(" "),_("img",{attrs:{src:v(1096),alt:"Alt text"}})]),t._v(" "),_("h2",{attrs:{id:"_4-flink的应用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-flink的应用场景"}},[t._v("#")]),t._v(" 4：Flink的应用场景")]),t._v(" "),_("p",[_("img",{attrs:{src:v(1097),alt:"Alt text"}})]),t._v(" "),_("h2",{attrs:{id:"_5-flink分层api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-flink分层api"}},[t._v("#")]),t._v(" 5：Flink分层API")]),t._v(" "),_("p",[_("img",{attrs:{src:v(1098),alt:"Alt text"}})])])}),[],!1,null,null,null);_.default=a.exports}}]);