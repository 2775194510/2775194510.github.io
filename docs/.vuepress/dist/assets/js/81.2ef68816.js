(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{1098:function(e,_,v){e.exports=v.p+"assets/img/image25.32529f04.png"},1469:function(e,_,v){"use strict";v.r(_);var a=v(1),o=Object(a.a)({},(function(){var e=this,_=e._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[_("img",{attrs:{src:v(1098),alt:"Alt text"}})]),e._v(" "),_("h2",{attrs:{id:"_1-作业管理器-jobmanager"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-作业管理器-jobmanager"}},[e._v("#")]),e._v(" 1：作业管理器（JobManager）")]),e._v(" "),_("p",[_("code",[e._v("JobManager")]),e._v(" 是一个 "),_("code",[e._v("Flink")]),e._v(" 集群中任务管理和调度的核心，是控制应用执行的主进程。也就是说，"),_("em",[_("strong",[e._v("每个应用都应该被唯一的JobManager所控制执行。")])])]),e._v(" "),_("p",[_("code",[e._v("JobManger")]),e._v(" 又包含3个不同的组件。")]),e._v(" "),_("blockquote",[_("p",[e._v("1）JobMaster")])]),e._v(" "),_("p",[_("code",[e._v("JobMaster")]),e._v(" 是 "),_("code",[e._v("JobManager")]),e._v(" 中最核心的组件，负责处理单独的作业（Job）。所以 "),_("code",[e._v("JobMaster")]),e._v(" 和具体的 "),_("code",[e._v("Job")]),e._v(" 是一一对应的，多个 "),_("code",[e._v("Job")]),e._v(" 可以同时运行在一个Flink集群中, 每个Job都有一个自己的 "),_("code",[e._v("JobMaster")]),e._v(" 。需要注意在早期版本的 "),_("code",[e._v("Flink")]),e._v(" 中，没有 "),_("code",[e._v("JobMaster")]),e._v(" 的概念；而"),_("code",[e._v("JobManager")]),e._v(" 的概念范围较小，实际指的就是现在所说的 "),_("code",[e._v("JobMaster")]),e._v(" 。")]),e._v(" "),_("p",[e._v("在作业提交时，"),_("code",[e._v("JobMaster")]),e._v(" 会先接收到要执行的应用。"),_("code",[e._v("JobMaster")]),e._v(" 会把 "),_("code",[e._v("JobGraph")]),e._v(" 转换成一个物理层面的数据流图，这个图被叫作 "),_("code",[e._v("“执行图”（ExecutionGraph）")]),e._v(" ，它包含了所有可以并发执行的任务。"),_("code",[e._v("JobMaster")]),e._v(" 会向资源管理器（ResourceManager）发出请求，申请执行任务必要的资源。一旦它获取到了足够的资源，就会将执行图分发到真正运行它们的TaskManager上。")]),e._v(" "),_("p",[e._v("而在运行过程中，"),_("code",[e._v("JobMaster")]),e._v("会负责所有需要中央协调的操作，比如说检查点（checkpoints）的协调。")]),e._v(" "),_("blockquote",[_("p",[e._v("2）资源管理器（ResourceManager）")])]),e._v(" "),_("p",[_("code",[e._v("ResourceManager")]),e._v(" 主要负责资源的分配和管理，在Flink 集群中只有一个。所谓“资源”，主要是指"),_("code",[e._v("TaskManager")]),e._v(" 的任务槽 "),_("code",[e._v("（task slots）")]),e._v(" 。任务槽就是 "),_("code",[e._v("Flink")]),e._v(" 集群中的资源调配单元，包含了机器用来执行计算的一组CPU和内存资源。每一个任务（Task）都需要分配到一个slot上执行。\n这里注意要把Flink内置的 "),_("code",[e._v("ResourceManager")]),e._v(" 和其他资源管理平台（比如YARN）的"),_("code",[e._v("ResourceManager")]),e._v(" 区分开。")]),e._v(" "),_("blockquote",[_("p",[e._v("（3）分发器（Dispatcher）")])]),e._v(" "),_("p",[_("code",[e._v("Dispatcher")]),e._v(" 主要负责提供一个 "),_("code",[e._v("REST")]),e._v(" 接口，用来提交应用，并且负责为每一个新提交的作业启动一个新的 "),_("code",[e._v("JobMaster")]),e._v(" 组件。"),_("code",[e._v("Dispatcher")]),e._v(" 也会启动一个 "),_("code",[e._v("Web UI")]),e._v(" ，用来方便地展示和监控作业执行的信息。"),_("code",[e._v("Dispatcher")]),e._v(" 在架构中并不是必需的，在不同的部署模式下可能会被忽略掉。")]),e._v(" "),_("h2",{attrs:{id:"_2-任务管理器-taskmanager"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-任务管理器-taskmanager"}},[e._v("#")]),e._v(" 2：任务管理器（TaskManager）")]),e._v(" "),_("p",[_("code",[e._v("TaskManager")]),e._v(" 是 "),_("code",[e._v("Flink")]),e._v(" 中的工作进程，数据流的具体计算就是它来做的。Flink集群中必须至少有一个 "),_("code",[e._v("TaskManager")]),e._v(" ；每一个 "),_("code",[e._v("TaskManager")]),e._v(" 都包含了一定数量的任务槽 "),_("code",[e._v("（task slots）")]),e._v(" 。 "),_("em",[_("strong",[_("code",[e._v("Slot")]),e._v(" 是资源调度的最小单位")])]),e._v(" ，slot的数量限制了 "),_("code",[e._v("TaskManager")]),e._v(" 能够并行处理的任务数量。\n启动之后，"),_("code",[e._v("TaskManager")]),e._v(" 会向资源管理器注册它的 "),_("code",[e._v("slots")]),e._v(" ；收到资源管理器的指令后，"),_("code",[e._v("TaskManager")]),e._v(" 就会将一个或者多个槽位提供给 "),_("code",[e._v("JobMaster")]),e._v(" 调用，"),_("code",[e._v("JobMaster")]),e._v(" 就可以分配任务来执行了。\n在执行过程中，"),_("code",[e._v("TaskManager")]),e._v(" 可以缓冲数据，还可以跟其他运行同一应用的 "),_("code",[e._v("TaskManager")]),e._v(" 交换数据。")])])}),[],!1,null,null,null);_.default=o.exports}}]);