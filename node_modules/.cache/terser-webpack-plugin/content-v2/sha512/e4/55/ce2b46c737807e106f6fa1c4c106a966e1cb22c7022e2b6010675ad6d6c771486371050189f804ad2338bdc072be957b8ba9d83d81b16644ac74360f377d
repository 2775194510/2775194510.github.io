{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{1661:function(s,t,a){\"use strict\";a.r(t);var n=a(1),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"p\",[s._v(\"搜索的结果可以按照用户指定的方式去处理或展示。\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"_1-排序\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-排序\"}},[s._v(\"#\")]),s._v(\" 1：排序\")]),s._v(\" \"),t(\"p\",[s._v(\"elasticsearch默认是根据相关度算分（_score）来排序，但是也支持自定义方式对搜索\"),t(\"a\",{attrs:{href:\"https://www.elastic.co/guide/en/elasticsearch/reference/current/sort-search-results.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"结果排序\"),t(\"OutboundLink\")],1),s._v(\"。可以排序字段类型有：keyword类型、数值类型、地理坐标类型、日期类型等。\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_1-1-普通字段排序\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1-普通字段排序\"}},[s._v(\"#\")]),s._v(\" 1.1 普通字段排序\")]),s._v(\" \"),t(\"p\",[s._v(\"keyword、数值、日期类型排序的语法基本一致。\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"语法\")]),s._v(\"：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /indexName/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"match_all\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"sort\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"FIELD\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"desc\"')]),s._v(\"  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 排序字段、排序方式ASC、DESC\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\")])]),t(\"p\",[s._v(\"排序条件是一个数组，也就是可以写多个排序条件。按照声明的顺序，当第一个条件相等时，再按照第二个条件排序，以此类推\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"示例\")]),s._v(\"：\")]),s._v(\" \"),t(\"p\",[s._v(\"需求描述：酒店数据按照用户评价（score）降序排序，评价相同的按照价格(price)升序排序\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:a(668),alt:\"alt text\"}})]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_1-2-地理坐标排序\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2-地理坐标排序\"}},[s._v(\"#\")]),s._v(\" 1.2 地理坐标排序\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"语法说明\")]),s._v(\"：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /indexName/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"match_all\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"sort\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"_geo_distance\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"FIELD\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"纬度，经度\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 文档中geo_point类型的字段名、目标坐标点\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"order\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"asc\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 排序方式\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"unit\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"km\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 排序的距离单位\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\")])]),t(\"p\",[s._v(\"这个查询的含义是：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"指定一个坐标，作为目标点\")]),s._v(\" \"),t(\"li\",[s._v(\"计算每一个文档中，指定字段（必须是geo_point类型）的坐标 到目标点的距离是多少\")]),s._v(\" \"),t(\"li\",[s._v(\"根据距离排序\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"示例：\")])]),s._v(\" \"),t(\"p\",[s._v(\"需求描述：实现对酒店数据按照到你的位置坐标的距离升序排序\")]),s._v(\" \"),t(\"p\",[s._v(\"提示：获取你的位置的经纬度的方式：\"),t(\"a\",{attrs:{href:\"https://lbs.amap.com/demo/jsapi-v2/example/map/click-to-get-lnglat/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"https://lbs.amap.com/demo/jsapi-v2/example/map/click-to-get-lnglat/\"),t(\"OutboundLink\")],1)]),s._v(\" \"),t(\"p\",[s._v(\"假设我的位置是：31.034661，121.612282，寻找我周围距离最近的酒店。\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:a(669),alt:\"alt text\"}})]),s._v(\" \"),t(\"h2\",{attrs:{id:\"_2-分页\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-分页\"}},[s._v(\"#\")]),s._v(\" 2：分页\")]),s._v(\" \"),t(\"p\",[s._v(\"elasticsearch 默认情况下只返回top10的数据。而如果要查询更多数据就需要修改分页参数了。elasticsearch中通过修改from、size参数来控制要返回的分页结果：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"code\",[s._v(\"from\")]),s._v(\"：从第几个文档开始\")]),s._v(\" \"),t(\"li\",[t(\"code\",[s._v(\"size\")]),s._v(\"：总共查询几个文档\")])]),s._v(\" \"),t(\"p\",[s._v(\"类似于mysql中的\"),t(\"code\",[s._v(\"limit ?, ?\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_2-1-基本的分页\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1-基本的分页\"}},[s._v(\"#\")]),s._v(\" 2.1 基本的分页\")]),s._v(\" \"),t(\"p\",[s._v(\"分页的基本语法如下：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /hotel/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"match_all\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"from\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 分页开始的位置，默认为0\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"size\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 期望获取的文档总数\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"sort\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"price\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"asc\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"_2-2-深度分页问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2-深度分页问题\"}},[s._v(\"#\")]),s._v(\" 2.2 深度分页问题\")]),s._v(\" \"),t(\"p\",[s._v(\"现在，我要查询 \"),t(\"code\",[s._v(\"990~1000\")]),s._v(\" 的数据，查询逻辑要这么写：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /hotel/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"match_all\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"from\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"990\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 分页开始的位置，默认为0\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"size\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 期望获取的文档总数\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"sort\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"price\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"asc\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\")])]),t(\"p\",[s._v(\"这里是查询990开始的数据，也就是 第990~第1000条 数据。\")]),s._v(\" \"),t(\"p\",[s._v(\"不过，elasticsearch内部分页时，必须先查询 0~1000条，然后截取其中的990 ~ 1000的这10条：\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:a(670),alt:\"alt text\"}})]),s._v(\" \"),t(\"p\",[s._v(\"查询TOP1000，如果es是单点模式，这并无太大影响。\")]),s._v(\" \"),t(\"p\",[s._v(\"但是elasticsearch将来一定是集群，例如我集群有5个节点，我要查询TOP1000的数据，并不是每个节点查询200条就可以了。\")]),s._v(\" \"),t(\"p\",[s._v(\"因为节点A的TOP200，在另一个节点可能排到10000名以外了。\")]),s._v(\" \"),t(\"p\",[s._v(\"因此要想获取整个集群的TOP1000，必须先查询出每个节点的TOP1000，汇总结果后，重新排名，重新截取TOP1000。\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:a(671),alt:\"alt text\"}})]),s._v(\" \"),t(\"p\",[s._v(\"那如果我要查询9900~10000的数据呢？是不是要先查询TOP10000呢？那每个节点都要查询10000条？汇总到内存中？\")]),s._v(\" \"),t(\"p\",[s._v(\"当查询分页深度较大时，汇总数据过多，对内存和CPU会产生非常大的压力，因此elasticsearch会禁止from+ size 超过10000的请求。\")]),s._v(\" \"),t(\"p\",[s._v(\"针对深度分页，ES提供了两种解决方案，\"),t(\"a\",{attrs:{href:\"https://www.elastic.co/guide/en/elasticsearch/reference/current/paginate-search-results.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"官方文档\"),t(\"OutboundLink\")],1),s._v(\"：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"search after：分页时需要排序，原理是从上一次的排序值开始，查询下一页数据。官方推荐使用的方式。\")]),s._v(\" \"),t(\"li\",[s._v(\"scroll：原理将排序后的文档id形成快照，保存在内存。官方已经不推荐使用。\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_2-3-总结\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3-总结\"}},[s._v(\"#\")]),s._v(\" 2.3 总结\")]),s._v(\" \"),t(\"p\",[s._v(\"分页查询的常见实现方案以及优缺点：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[t(\"code\",[s._v(\"from + size\")]),s._v(\"：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"优点：支持随机翻页\")]),s._v(\" \"),t(\"li\",[s._v(\"缺点：深度分页问题，默认查询上限（from + size）是10000\")]),s._v(\" \"),t(\"li\",[s._v(\"场景：百度、京东、谷歌、淘宝这样的随机翻页搜索\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"code\",[s._v(\"after search\")]),s._v(\"：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"优点：没有查询上限（单次查询的size不超过10000）\")]),s._v(\" \"),t(\"li\",[s._v(\"缺点：只能向后逐页查询，不支持随机翻页\")]),s._v(\" \"),t(\"li\",[s._v(\"场景：没有随机翻页需求的搜索，例如手机向下滚动翻页\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"code\",[s._v(\"scroll\")]),s._v(\"：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"优点：没有查询上限（单次查询的size不超过10000）\")]),s._v(\" \"),t(\"li\",[s._v(\"缺点：会有额外内存消耗，并且搜索结果是非实时的\")]),s._v(\" \"),t(\"li\",[s._v(\"场景：海量数据的获取和迁移。从ES7.1开始不推荐，建议用 after search方案。\")])])])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"_3-高亮\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-高亮\"}},[s._v(\"#\")]),s._v(\" 3：高亮\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_3-1-高亮原理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-1-高亮原理\"}},[s._v(\"#\")]),s._v(\" 3.1 高亮原理\")]),s._v(\" \"),t(\"p\",[s._v(\"什么是高亮显示呢？\")]),s._v(\" \"),t(\"p\",[s._v(\"我们在百度，京东搜索时，关键字会变成红色，比较醒目，这叫高亮显示：\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:a(672),alt:\"alt text\"}})]),s._v(\" \"),t(\"p\",[s._v(\"高亮显示的实现分为两步：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"1）给文档中的所有关键字都添加一个标签，例如\"),t(\"code\",[s._v(\"<em>\")]),s._v(\"标签\")]),s._v(\" \"),t(\"li\",[s._v(\"2）页面给\"),t(\"code\",[s._v(\"<em>\")]),s._v(\"标签编写CSS样式\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"_3-2-实现高亮\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-2-实现高亮\"}},[s._v(\"#\")]),s._v(\" 3.2 实现高亮\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"高亮的语法\")]),s._v(\"：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /hotel/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"match\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"FIELD\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"TEXT\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 查询条件，高亮一定要使用全文检索查询\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"highlight\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"fields\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 指定要高亮的字段\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"FIELD\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"pre_tags\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"<em>\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 用来标记高亮字段的前置标签\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"post_tags\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"</em>\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 用来标记高亮字段的后置标签\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"注意：\")])]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"高亮是对关键字高亮，因此\"),t(\"strong\",[s._v(\"搜索条件必须带有关键字\")]),s._v(\"，而不能是范围这样的查询。\")]),s._v(\" \"),t(\"li\",[s._v(\"默认情况下，\"),t(\"strong\",[s._v(\"高亮的字段，必须与搜索指定的字段一致\")]),s._v(\"，否则无法高亮\")]),s._v(\" \"),t(\"li\",[s._v(\"如果要对非搜索字段高亮，则需要添加一个属性：required_field_match=false\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"示例\")]),s._v(\"：\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:a(673),alt:\"alt text\"}})]),s._v(\" \"),t(\"h2\",{attrs:{id:\"_4-总结\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-总结\"}},[s._v(\"#\")]),s._v(\" 4：总结\")]),s._v(\" \"),t(\"p\",[s._v(\"查询的DSL是一个大的JSON对象，包含下列属性：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"query：查询条件\")]),s._v(\" \"),t(\"li\",[s._v(\"from和size：分页条件\")]),s._v(\" \"),t(\"li\",[s._v(\"sort：排序条件\")]),s._v(\" \"),t(\"li\",[s._v(\"highlight：高亮条件\")])]),s._v(\" \"),t(\"p\",[s._v(\"示例：\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:a(674),alt:\"alt text\"}})])])}),[],!1,null,null,null);t.default=r.exports},668:function(s,t,a){s.exports=a.p+\"assets/img/image60.3ff8644b.png\"},669:function(s,t,a){s.exports=a.p+\"assets/img/image61.c6279048.png\"},670:function(s,t,a){s.exports=a.p+\"assets/img/image62.ff505e97.png\"},671:function(s,t,a){s.exports=a.p+\"assets/img/image63.f3a66458.png\"},672:function(s,t,a){s.exports=a.p+\"assets/img/image64.6807c34d.png\"},673:function(s,t,a){s.exports=a.p+\"assets/img/image65.e337f30a.png\"},674:function(s,t,a){s.exports=a.p+\"assets/img/image66.b552e7a6.png\"}}]);","extractedComments":[]}